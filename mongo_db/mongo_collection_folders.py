from aiogram.types import User

from mongo_db.mongo import db
from utils.utils_user import get_user_full_str

ROOT_FOLDER_ID = "0"


async def add_user_folders(tg_user: User):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø–∞–ø–æ–∫ folders –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."""
    user_folders_collection = db["folders"]  # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é "folders" –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è folders –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user_folders_document = user_folders_collection.find_one({"_id": tg_user.id})

    if not user_folders_document:
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–∞–ø–æ–∫ folders –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = {
            "_id": tg_user.id,
            "folders": {
                "0": {
                    "name": "–•—Ä–∞–Ω–∏–ª–∏—â–µ",
                    "folders": {
                        "0/1-1": {
                            "name": "–ó–∞–º–µ—Ç–∫–∏ üìí",
                            "access": {
                                "pin": None,
                                "users": {}
                            },
                            "folders": {},
                            "items": {}
                        },
                        "0/1-2": {
                            "name": "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ üîó",
                            "access": {
                                "pin": None,
                                "users": {}
                            },
                            "folders": {},
                            "items": {}
                        },
                    },
                    "items": {}
                }
            }
        }
        user_full_str = get_user_full_str(tg_user)
        try:
            print(f"–°–æ–∑–¥–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ (folders) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_full_str} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            user_folders_collection.insert_one(user_data)
            print("–£—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_full_str} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:", e)


async def get_user_folders_data(tg_user_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É."""
    user_folders_collection = db["folders"]
    user_document = user_folders_collection.find_one({"_id": tg_user_id})
    return user_document


async def set_user_folders_data(tg_user_id, data):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_folders_collection = db["folders"]
    try:
        user_folders_collection.update_one({"_id": tg_user_id}, {"$set": data}, upsert=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –±–¥ -> set_user_folders_data:\n{e}")


async def get_user_folders_collection(tg_user_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É."""
    user_document = await get_user_folders_data(tg_user_id)
    if user_document:
        return user_document.get("folders", {})
    return {}
